"""Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator."""

from nipype.interfaces.base import CommandLine, CommandLineInputSpec, TraitedSpec, File, Directory, traits, isdefined, InputMultiPath, OutputMultiPath
import os
from nipype.interfaces.slicer.base import SlicerCommandLine


class fcsv_to_hdf5InputSpec(CommandLineInputSpec):
    outputMatlabFile = traits.Either(traits.Bool, File(), hash_files=False, desc=",         name of HDF5 file to write matrices into,       ", argstr="--outputMatlabFile %s")
    landmarkTypesFile = traits.Either(traits.Bool, File(), hash_files=False, desc=",         file containing list of landmark types,       ", argstr="--landmarkTypesFile %s")
    modelFile = traits.Either(traits.Bool, File(), hash_files=False, desc=",         file containing BRAINSConstellationDetector Model file,       ", argstr="--modelFile %s")
    landmarkGlobPattern = traits.Str(desc="Glob pattern to select fcsv files", argstr="--landmarkGlobPattern %s")
    numberOfThreads = traits.Int(desc="Explicitly specify the maximum number of threads to use.", argstr="--numberOfThreads %d")


class fcsv_to_hdf5OutputSpec(TraitedSpec):
    outputMatlabFile = File(desc=",         name of HDF5 file to write matrices into,       ", exists=True)
    landmarkTypesFile = File(desc=",         file containing list of landmark types,       ", exists=True)
    modelFile = File(desc=",         file containing BRAINSConstellationDetector Model file,       ", exists=True)


class fcsv_to_hdf5(SlicerCommandLine):
    """title: fcsv_to_matlab (BRAINS)

category: Utility.BRAINS

description: Convert a collection of fcsv files to a HDF5 format file

"""

    input_spec = fcsv_to_hdf5InputSpec
    output_spec = fcsv_to_hdf5OutputSpec
    _cmd = " fcsv_to_hdf5 "
    _outputs_filenames = {'modelFile':'modelFile','landmarkTypesFile':'landmarkTypesFile.txt','outputMatlabFile':'outputMatlabFile.h5'}
