#!/usr/bin/tclsh

################################################################################
# Procedure:
# Developer:  Hans J. Johnson
# Developer:  Greg Harris -- Replaced the above with this version to add printing.
# Synopsis:   This function compares the output list's time stamps to the input files' time stamps.
#             Returns true iff every one of the outputs is dated after all the inputs.
    ## Note that the following CheckOutputsNewer has the AllowMissingOutputs flag.  Only move
    ## directories aside if the input files are newer than the EXISTING output files, if any.
    ## If there are missing output files and all the existing output files are newer than input
    ## files, then do not move directories aside.
# Prototype:   proc CheckOutputsNewer { OutputList InputLists {ForceImmediateScriptExit 1} {AllowMissingOutputs 0} }
# OutputList - list of file names for outputs that should be produced.
# InputLists - list of file names for inputs used to produce the outputs.
# ForceImmediateScriptExit - exit the script if any of the inputs do not exist.
# AllowMissingOutputs - If there are missing output files and all the existing output files are newer than input
# files, then return true.
################################################################################
proc CheckOutputsNewer { OutputList InputLists {ForceImmediateScriptExit 1} {AllowMissingOutputs 0}} {
  puts "Check if $OutputList is newer than $InputLists";
  foreach CurrInput ${InputLists} {
    ## Skip processing files that are ".",which  in brains2 means purposefuly missing
    if { ${CurrInput} == "." } {
      continue;
    }
    ## Check that all inputs exists first
    if { [ file exists $CurrInput ] == 0 } {
      if { $ForceImmediateScriptExit } {
        puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is missing";
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is missing";
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is missing";
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is missing";
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is missing";
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is missing";
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is missing";
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR                         ERROR"
        puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is missing";
        exit -1
      } else {
        puts "Possible Trouble: Necessary file $CurrInput does not even exist yet";
        return "false"
      }
    }
    ## Input files must be greater than 0 length to be valid
    if { [ file size $CurrInput ] == 0 } {
      puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is a zero-length file";
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is a zero-length file";
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is a zero-length file";
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is a zero-length file";
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is a zero-length file";
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is a zero-length file";
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is a zero-length file";
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR                         ERROR"
      puts "ERROR ERROR ERROR ERROR ERROR ERROR: Necessary file $CurrInput is a zero-length file";
      if { $ForceImmediateScriptExit } {
        exit -1
      } else {
        puts "Possible Trouble: Necessary file $CurrInput is a zero-length file";
        return "false"
      }
    }
  }
  foreach CurrOutput ${OutputList} {
    ## Skip processing files that are ".",which  in brains2 means purposefuly missing
    if { ${CurrOutput} == "." } {
      continue;
    }
    ## Check that the output is valid
    if { [ file exists $CurrOutput ] } {
      if { [ file size $CurrOutput ] > 0 } {
        set oldtime [ file mtime ${CurrOutput} ];
        ## Now for this valid output, check that all the inputs are also older.
        foreach CurrInput ${InputLists} {
          ## Skip processing files that are ".",which  in brains2 means purposefuly missing
          if { ${CurrInput} == "." } {
            continue;
          }
          ## Skip processing of files that contain Atlas as part of the path, because these file timestamps should not be checked.
          if { [ string match "*/Atlas/*"  ${CurrInput} ] == 1 } {
            continue;
          }
          set newtime [ file mtime ${CurrInput} ];
          if { $oldtime < $newtime } {

            if { [file writable ${CurrOutput}] == 0 } {
              puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is not writable (by this user; check protections?)";
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is not writable (by this user; check protections?)";
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is not writable (by this user; check protections?)";
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is not writable (by this user; check protections?)";
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is not writable (by this user; check protections?)";
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is not writable (by this user; check protections?)";
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                     source /ipldev/scratch/harris/local/brains2/src/iplTclScripts/Puts.b2
  ERROR"
              puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is not writable (by this user; check protections?)";
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR                         ERROR"
              puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is not writable (by this user; check protections?)";
              if { $ForceImmediateScriptExit } {
                exit -1
              }
            } else {
              puts "-------------------------${CurrOutput} was written before ${CurrInput}."
              return "false"
            };
          }
        }
      } else {
        if { [file writable ${CurrOutput}] == 0 } {
          puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is both zero-length and not writable (by this user; check protections?)";
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is both zero-length and not writable (by this user; check protections?)";
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is both zero-length and not writable (by this user; check protections?)";
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is both zero-length and not writable (by this user; check protections?)";
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is both zero-length and not writable (by this user; check protections?)";
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is both zero-length and not writable (by this user; check protections?)";
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is both zero-length and not writable (by this user; check protections?)";
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR                         ERROR"
          puts "ERROR ERROR ERROR ERROR ERROR ERROR: Proposed output file $CurrOutput is both zero-length and not writable (by this user; check protections?)";
          if { $ForceImmediateScriptExit } {
            exit -1
          }
        } else {
          puts "++++++++++++++++++++++++${CurrOutput} was a writable zero-length file."
          return "false";
        };
      }
    } elseif {$AllowMissingOutputs == 0} {
      puts "++++++++++++++++++++++++${CurrOutput} was missing."
      return "false";
    }
  }
  return "true";
}
