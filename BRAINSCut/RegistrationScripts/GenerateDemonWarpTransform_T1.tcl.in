#!/usr/bin/tclsh

set EXEC_PATH @CMAKE_RUNTIME_OUTPUT_DIRECTORY@

puts "--------------------------------------------------------------------------------------"
puts "Start to run DemonsWarp Scripting"
if { $argc != 3 && $argc != 4 } {
  puts "ERROR: Incorect number of arguments";
  exit -1 ;
}

source ${EXEC_PATH}/CheckOutputsNewer.tcl

set MovingImage [lindex $argv 0];
set FixedImage  [lindex $argv 1];
set DeformationOutput [lindex $argv 2];
set sigma 3.0
set basepathoutput [ file dirname ${FixedImage} ];
set BSplineTransformOutput "[file rootname [ file rootname ${DeformationOutput}]].mat"
file mkdir [ file dirname $DeformationOutput ];
puts " ---- Checking BSpline output is newer than other file...."
if  {[ CheckOutputsNewer [list ${BSplineTransformOutput} ] [list ${MovingImage} ${FixedImage} ]  ] == false } {
      puts " This Bspline is not new enough, run BSPline Again"
      puts "${EXEC_PATH}/GenerateBSplineTransform.tcl ${MovingImage} ${FixedImage} ${BSplineTransformOutput}"
      set BSplineStatus [catch { exec \
             ${EXEC_PATH}/GenerateBSplineTransform.tcl ${MovingImage} ${FixedImage} ${BSplineTransformOutput} \
      } RETURN_VALUE ];
} else {
  puts " BSpline exists, no need to run again"
  #No need to run BSpline, so report successful status
  set BSplineStatus 0;
}
puts "--------------------------------------------------------------------------------------"
puts "Demons Registration Checking"
if  {[ CheckOutputsNewer [list ${DeformationOutput} ] [list ${BSplineTransformOutput} ${MovingImage} ${FixedImage} ]  ] == false } {
   puts "---------------------------------------------Running DiffeomorphicDemons--------------------"
   puts "${EXEC_PATH}/BRAINSDemonWarpCLP \
   --initializeWithTransform ${BSplineTransformOutput} \
     --inputPixelType ushort \
     --movingVolume $MovingImage \
     --fixedVolume $FixedImage \
     --medianFilterSize 1,1,1 \
     --outputPixelType ushort \
     --outputVolume ${DeformationOutput}_DemonWarp_output.nii.gz \
     --numberOfHistogramBins 50 --numberOfMatchPoints 10 \
     --numberOfPyramidLevels 5 \
     --arrayOfPyramidLevelIterations 400,100,50,30,20 \
     --minimumMovingPyramid 16,16,16 \
     --minimumFixedPyramid 16,16,16 \
     --outputDeformationFieldVolume $DeformationOutput \
     --registrationFilterType Diffeomorphic \
     --smoothDeformationFieldSigma ${sigma} "
   
   set DemonsStatus [catch { exec \
         ${EXEC_PATH}/BRAINSDemonWarpCLP \
           --initializeWithTransform ${BSplineTransformOutput} \
           --inputPixelType ushort \
           --movingVolume $MovingImage \
           --fixedVolume $FixedImage \
           --medianFilterSize 1,1,1 \
           --outputPixelType ushort \
           --outputVolume ${DeformationOutput}_DemonWarp_output.nii.gz \
           --numberOfHistogramBins 50 --numberOfMatchPoints 10 \
           --numberOfPyramidLevels 5 \
           --arrayOfPyramidLevelIterations 400,100,50,30,20 \
           --minimumMovingPyramid 16,16,16 \
           --minimumFixedPyramid 16,16,16 \
           --outputDeformationFieldVolume $DeformationOutput \
           --registrationFilterType Diffeomorphic \
           --smoothDeformationFieldSigma ${sigma} 
   } RETURN_VALUE \
   ];
     
   puts "---------------------------------------------End of DiffeomorphicDemons--------------------"
   puts "$RETURN_VALUE"
   puts "---------------------------------------------End of DiffeomorphicDemons' return value------"
} else {
  puts " no need of Demon..."
  set DemonsStatus 0;
}

puts "This is Demon Status from Demons Script:::::: ${DemonsStatus}"

