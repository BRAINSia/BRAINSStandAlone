#!/usr/bin/tclsh

set EXEC_PATH @CMAKE_RUNTIME_OUTPUT_DIRECTORY@

if { $argc != 3 && $argc != 4 } {
  puts "ERROR: Incorect number of arguments";
  exit -1 ;
}
puts "Starting BSpline Scripts....."
source ${EXEC_PATH}/CheckOutputsNewer.tcl

set MovingImage [lindex $argv 0];
set FixedImage  [lindex $argv 1];
set DeformationOutput [lindex $argv 2];

if  { [ file exists $DeformationOutput ] } {
  puts "Skipping generation of $DeformationOutput because it already exists===="
  exit 0;
} else {
  puts "need to generate $DeformationOutput===================================="
   file mkdir [ file dirname $DeformationOutput ];
   if  {[ CheckOutputsNewer [list ${DeformationOutput} ] [list ${FixedImage} ${MovingImage} ]  ] == false } {
   set EXEC_Commands  "${EXEC_PATH}/BRAINSFit \
          --maxBSplineDisplacement 7\
          --fixedVolume $FixedImage \
          --movingVolume  $MovingImage \
          --initializeTransformMode useCenterOfHeadAlign \
          --maskProcessingMode ROIAUTO \
          --ROIAutoDilateSize 3.0 \
          --maskInferiorCutOffFromCenter 65.0 \
          --outputVolume ${DeformationOutput}_BSpline_output.nii.gz \
          --outputVolumePixelType short \
          --outputTransform $DeformationOutput \
          --useRigid \
          --useScaleVersor3D \
          --useScaleSkewVersor3D \
          --useAffine --useBSpline \
          --numberOfIterations 1500,1500,1500,1500,1500 \
          --minimumStepLength 0.00005,0.005,0.005,0.005,0.005 \
          --translationScale 1000.0 --reproportionScale 1.0 \
          --numberOfSamples 1000000 --skewScale 1.0 --splineGridSize 28,20,24 \
          --numberOfHistogramBins 50 --numberOfMatchPoints 10 --histogramMatch \
          >&@stdout"
    puts ${EXEC_Commands}
    set BSplineStatus [catch { 
                              exec ${EXEC_Commands}
                             } 
                       RETURN_VALUE ];

     puts "---------------------------Error Message  Value from BSpline Status...."
     puts "Information about it: $::errorInfo"
     puts "--------------------------------Returning Value from BSpline Status...."
     puts "$RETURN_VALUE"

   } else {
     set BSplineStatus 0;
   }
   puts "Status of BSpline from Bspline Script:::::${BSplineStatus}"
}
